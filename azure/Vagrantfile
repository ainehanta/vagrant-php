# vi: set ft=ruby :

require 'dotenv'

Dotenv.load

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'azure'

def which(cmd)
    exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
    ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
        exts.each { |ext|
            exe = File.join(path, "#{cmd}#{ext}")
            return exe if File.executable? exe
        }
    end
    return nil
end

Vagrant.configure('2') do |config|
  config.vm.box = 'azure'

  config.vm.provider :azure do |azure|
      azure.mgmt_certificate = './keys/azure.pem'
      azure.mgmt_endpoint = 'https://management.core.windows.net'
      azure.subscription_id = "#{ENV['AZURE_SUBSCRIPTION_ID']}"

      azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_2-LTS-amd64-server-20150706-en-us-30GB'
      azure.vm_user = 'azureuser' # defaults to 'vagrant' if not provided
      azure.vm_password = "#{ENV['AZURE_PASSWORD']}" # min 8 characters. should contain a lower case letter, an uppercase letter, a number and a special character

      azure.vm_name = 'vagrant-php' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
      azure.vm_location = 'Japan East' # e.g., West US
      azure.private_key_file = './keys/azure.key'
      azure.certificate_file = './keys/azure-cert.pem'

      # Provide the following values if creating a *Nix VM
      azure.ssh_port = "#{ENV['AZURE_SSH_PORT']}"

      config.vm.box      = 'azure'
      config.vm.box_url  = 'https://github.com/msopentech/vagrant-azure/raw/master/dummy.box'
    end

    config.ssh.username = 'azureuser' # the one used to create the VM
    config.ssh.password = "#{ENV['AZURE_PASSWORD']}" # the one used to create the VM

    if which('ansible-playbook')
        config.vm.provision "ansible" do |ansible|
            ansible.playbook = "../ansible/playbook-azure.yml"
            ansible.limit = 'all'
        end
    else
        config.vm.provision :shell, path: "../ansible/windows.sh", args: ["default"]
    end

    config.vm.synced_folder "../share", "/vagrant", type: "rsync"
end
